stages:
  - build
  - deploy
  - critic

build:
  stage: build
  image: perl
  script:
    # set project version
    - find . -type f -not -path "./.git/*" -print0 | xargs -0 sed -i "s|@@PROJECT_VERSION@@|${CI_COMMIT_REF_NAME}|g"
    # install dependencies
    - cpanm --installdeps --notest --with-recommends --with-configure .
    # build
    - perl Build.PL
    - ./Build manifest
    - ./Build test
    - ./Build install
    # package
    - pp -o perlqube bin/perlqube
  artifacts:
    paths:
      - perlqube
    expire_in: 5 days

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  dependencies:
    - build
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}

critic:
  stage: critic
  image: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  script:
    - >
      if [ -z "${CI_COMMIT_TAG}" ] && [ "$CI_COMMIT_REF_NAME" != "master" ]; then
        export PERLQUBE_OPTS="--preview --git-ref-base master"
      fi
    - perlqube $PERLQUBE_OPTS lib
  dependencies: []
  variables:
    PERLQUBE_SEVERITY: brutal
    PERLQUBE_JSON: perlqube.json
  artifacts:
    paths:
      - perlqube.json
    expire_in: 5 days
